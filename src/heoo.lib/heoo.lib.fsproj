<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.1;net6.0</TargetFrameworks>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <Title>Half elmish OO</Title>
        <Copyright>ptcsoderlund@gmail.com</Copyright>
        <PackageProjectUrl>https://github.com/ptcsoderlund/half-elmish-oo</PackageProjectUrl>
        <PackageLicenseUrl></PackageLicenseUrl>
        <Company>N/A</Company>
        <AssemblyVersion>1.3.1</AssemblyVersion>
        <FileVersion>1.3.1</FileVersion>
        <PackageVersion>1.3.1</PackageVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>F# half elmish async program loop and viewmodels.
Can potentially be used in any GUI (or graphics?) app.
Where the viewmodels is the glue between graphics and logic.</Description>
        <RepositoryUrl>https://github.com/ptcsoderlund/half-elmish-oo</RepositoryUrl>
        <Version>1.2.5</Version>
        <PackageTags>F#;FSharp;Elmish</PackageTags>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReleaseNotes>Optional parameter added for ElmishProgramAsync constructor. It is now possible to send updated model between messages or after all messages have been processed. Standard and recommended is AfterAllMessages, at least when viewmodels are the consumers.</PackageReleaseNotes>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <Authors>ptcsoderlund</Authors>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="CommandBase.fs" />
        <Compile Include="ElmishProgramAsync.fs" />
        <Compile Include="ViewModelBase.fs" />
    </ItemGroup>

    <ItemGroup>
      <None Include="..\..\LICENSE">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
    </ItemGroup>

</Project>
